apiVersion: apps/v1
kind: Deployment
metadata:
  name: geometric-consensus
  namespace: geometric-consensus
  labels:
    app: geometric-consensus
    version: v1.0.0
    component: consensus-node
spec:
  replicas: 7  # Fano plane structure: 7 consensus nodes
  selector:
    matchLabels:
      app: geometric-consensus
  template:
    metadata:
      labels:
        app: geometric-consensus
        version: v1.0.0
        component: consensus-node
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: geometric-consensus
        image: geometric-consensus:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: consensus
          protocol: TCP
        - containerPort: 9091
          name: p2p
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: CONSENSUS_TYPE
          value: "TETRAHEDRON"
        - name: MAX_STEPS
          value: "14"
        - name: NETWORK_SIZE
          value: "7"
        - name: BIND_ADDRESS
          value: "0.0.0.0"
        - name: HTTP_PORT
          value: "8080"
        - name: CONSENSUS_PORT
          value: "9090"
        - name: P2P_PORT
          value: "9091"
        - name: PEER_DISCOVERY
          value: "k8s"
        - name: METRICS_ENABLED
          value: "true"
        - name: HEALTH_CHECK_ENABLED
          value: "true"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: geometric-consensus-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: geometric-consensus-data
      - name: logs-volume
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - geometric-consensus
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                - "true"
      tolerations:
      - key: "consensus-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      nodeSelector:
        node-type: "consensus-optimized"
