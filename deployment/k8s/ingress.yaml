apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: geometric-consensus-ingress
  namespace: geometric-consensus
  labels:
    app: geometric-consensus
    version: v1.0.0
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
spec:
  tls:
  - hosts:
    - geometric-consensus.example.com
    - api.geometric-consensus.example.com
    - metrics.geometric-consensus.example.com
    secretName: geometric-consensus-tls
  rules:
  # Main API
  - host: api.geometric-consensus.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: geometric-consensus-service
            port:
              number: 80
  # Metrics endpoint
  - host: metrics.geometric-consensus.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: geometric-consensus-metrics
            port:
              number: 8080
  # Web interface
  - host: geometric-consensus.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: geometric-consensus-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: geometric-consensus-network-policy
  namespace: geometric-consensus
  labels:
    app: geometric-consensus
    version: v1.0.0
    component: network-policy
spec:
  podSelector:
    matchLabels:
      app: geometric-consensus
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  # Allow ingress from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  # Allow ingress from other consensus pods
  - from:
    - podSelector:
        matchLabels:
          app: geometric-consensus
    ports:
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 9091
  egress:
  # Allow egress to other consensus pods
  - to:
    - podSelector:
        matchLabels:
          app: geometric-consensus
    ports:
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 9091
  # Allow egress to DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow egress to monitoring
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  # Allow egress to external services (for updates, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
