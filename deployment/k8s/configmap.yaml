apiVersion: v1
kind: ConfigMap
metadata:
  name: geometric-consensus-config
  namespace: geometric-consensus
  labels:
    app: geometric-consensus
    version: v1.0.0
    component: configuration
data:
  # Application Configuration
  app.json: |
    {
      "name": "geometric-consensus",
      "version": "1.0.0",
      "description": "Geometric Consensus Protocol using Universal Quadratic Forms",
      "environment": "production",
      "logLevel": "info",
      "metrics": {
        "enabled": true,
        "port": 8080,
        "path": "/metrics"
      },
      "health": {
        "enabled": true,
        "port": 8080,
        "paths": {
          "live": "/health/live",
          "ready": "/health/ready",
          "startup": "/health/startup"
        }
      }
    }
  
  # Consensus Configuration
  consensus.json: |
    {
      "type": "TETRAHEDRON",
      "maxSteps": 14,
      "timeout": 30000,
      "threshold": 1.0,
      "ramanujanForms": {
        "universal": [
          [1, 1, 2, 2], [1, 1, 2, 3], [1, 1, 2, 4], [1, 1, 2, 5],
          [1, 1, 2, 6], [1, 1, 2, 7], [1, 1, 2, 8], [1, 1, 2, 9],
          [1, 1, 2, 10], [1, 1, 2, 11], [1, 1, 2, 12], [1, 1, 2, 13], [1, 1, 2, 14]
        ],
        "exceptional": [1, 2, 5, 5]
      },
      "validation": {
        "chromaticPolynomial": true,
        "bettiNumbers": true,
        "geometricStructure": true
      }
    }
  
  # Network Configuration
  network.json: |
    {
      "bindAddress": "0.0.0.0",
      "ports": {
        "http": 8080,
        "consensus": 9090,
        "p2p": 9091
      },
      "discovery": {
        "type": "k8s",
        "service": "geometric-consensus-headless",
        "namespace": "geometric-consensus"
      },
      "p2p": {
        "enabled": true,
        "bootstrapNodes": [],
        "maxPeers": 7,
        "connectionTimeout": 10000,
        "keepAliveInterval": 30000
      },
      "tls": {
        "enabled": false,
        "certFile": "",
        "keyFile": ""
      }
    }
  
  # Mathematical Configuration
  mathematics.json: |
    {
      "hilbertSpace": {
        "dimensions": 7,
        "basis": ["Node", "Edge", "Graph", "Incidence", "Hypergraph", "Functor", "Monad"],
        "completeness": true
      },
      "fanoPlane": {
        "points": 7,
        "lines": 7,
        "pointsPerLine": 3,
        "linesPerPoint": 3,
        "automorphismGroup": "PGL(3,2)"
      },
      "blockDesign": {
        "type": "BIBD",
        "parameters": {
          "v": 7,
          "k": 3,
          "lambda": 1,
          "r": 3,
          "b": 7
        }
      },
      "graphTheory": {
        "maxVertices": 10000,
        "maxEdges": 50000,
        "cycleDetection": "DFS",
        "bettiCalculation": "O(v)"
      }
    }
  
  # Performance Configuration
  performance.json: |
    {
      "limits": {
        "maxExecutionTime": 1000,
        "maxMemoryUsage": 536870912,
        "maxSteps": 14,
        "maxVertices": 10000,
        "maxEdges": 50000,
        "maxParticipants": 7
      },
      "benchmarks": {
        "enabled": true,
        "interval": 60000,
        "metrics": ["executionTime", "memoryUsage", "consensusSteps"]
      },
      "profiling": {
        "enabled": false,
        "port": 6060,
        "path": "/debug/pprof"
      }
    }
  
  # Security Configuration
  security.json: |
    {
      "cryptographic": {
        "enabled": true,
        "algorithm": "ECDSA",
        "keySize": 256,
        "signatureVerification": true
      },
      "sovereignty": {
        "enabled": true,
        "proofRequired": true,
        "geometricValidation": true
      },
      "access": {
        "allowedOrigins": ["*"],
        "rateLimiting": {
          "enabled": true,
          "requestsPerMinute": 100
        }
      }
    }
  
  # Logging Configuration
  logging.json: |
    {
      "level": "info",
      "format": "json",
      "output": "stdout",
      "rotation": {
        "enabled": true,
        "maxSize": "100MB",
        "maxFiles": 5,
        "maxAge": "7d"
      },
      "fields": {
        "service": "geometric-consensus",
        "version": "1.0.0",
        "environment": "production"
      }
    }
  
  # Monitoring Configuration
  monitoring.json: |
    {
      "prometheus": {
        "enabled": true,
        "port": 8080,
        "path": "/metrics",
        "interval": "15s"
      },
      "healthChecks": {
        "enabled": true,
        "interval": "10s",
        "timeout": "5s",
        "retries": 3
      },
      "alerts": {
        "enabled": true,
        "rules": [
          {
            "name": "consensus_failure",
            "condition": "consensus_failures_total > 0",
            "severity": "critical"
          },
          {
            "name": "high_memory_usage",
            "condition": "memory_usage_percent > 80",
            "severity": "warning"
          },
          {
            "name": "slow_consensus",
            "condition": "consensus_duration_seconds > 1",
            "severity": "warning"
          }
        ]
      }
    }
  
  # Feature Flags
  features.json: |
    {
      "ipv6Encoding": true,
      "fanoPlane": true,
      "blockDesign": true,
      "ramanujanForms": true,
      "chromaticPolynomial": true,
      "bettiNumbers": true,
      "partitionDetection": true,
      "dualityRecovery": true,
      "tuttePolynomial": false,
      "genusClassifier": false,
      "browserModel": true,
      "federatedLearning": true,
      "p2pTypeSync": true,
      "cryptographicIdentity": true,
      "performanceBenchmarks": true
    }
